/*
 * This file is generated by jOOQ.
 */
package com.knowledgespike.db


import com.knowledgespike.db.tables.Battingdetails
import com.knowledgespike.db.tables.Bowlingdetails
import com.knowledgespike.db.tables.Closeofplay
import com.knowledgespike.db.tables.Countries
import com.knowledgespike.db.tables.Countrycodes
import com.knowledgespike.db.tables.Extramatchdetails
import com.knowledgespike.db.tables.Fallofwickets
import com.knowledgespike.db.tables.Fielding
import com.knowledgespike.db.tables.Grounds
import com.knowledgespike.db.tables.Groundsmatchtypes
import com.knowledgespike.db.tables.Groundsname
import com.knowledgespike.db.tables.Innings
import com.knowledgespike.db.tables.Matches
import com.knowledgespike.db.tables.Matchreferees
import com.knowledgespike.db.tables.Matchrefereesmatches
import com.knowledgespike.db.tables.Matchsubtype
import com.knowledgespike.db.tables.Notes
import com.knowledgespike.db.tables.Partnerships
import com.knowledgespike.db.tables.Partnershipsplayers
import com.knowledgespike.db.tables.Players
import com.knowledgespike.db.tables.Playersmatches
import com.knowledgespike.db.tables.Playersofthematchmatches
import com.knowledgespike.db.tables.Playersteams
import com.knowledgespike.db.tables.Reserveumpires
import com.knowledgespike.db.tables.Reserveumpiresmatches
import com.knowledgespike.db.tables.Scorers
import com.knowledgespike.db.tables.Scorersmatches
import com.knowledgespike.db.tables.Teams
import com.knowledgespike.db.tables.Teamsmatchtypes
import com.knowledgespike.db.tables.Tvumpires
import com.knowledgespike.db.tables.Tvumpiresmatches
import com.knowledgespike.db.tables.Umpires
import com.knowledgespike.db.tables.Umpiresmatches

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Cricketarchive : SchemaImpl("cricketarchive", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>cricketarchive</code>
         */
        val CRICKETARCHIVE: Cricketarchive = Cricketarchive()
    }

    /**
     * The table <code>cricketarchive.BattingDetails</code>.
     */
    val BATTINGDETAILS: Battingdetails get() = Battingdetails.BATTINGDETAILS

    /**
     * The table <code>cricketarchive.BowlingDetails</code>.
     */
    val BOWLINGDETAILS: Bowlingdetails get() = Bowlingdetails.BOWLINGDETAILS

    /**
     * The table <code>cricketarchive.CloseOfPlay</code>.
     */
    val CLOSEOFPLAY: Closeofplay get() = Closeofplay.CLOSEOFPLAY

    /**
     * The table <code>cricketarchive.Countries</code>.
     */
    val COUNTRIES: Countries get() = Countries.COUNTRIES

    /**
     * The table <code>cricketarchive.CountryCodes</code>.
     */
    val COUNTRYCODES: Countrycodes get() = Countrycodes.COUNTRYCODES

    /**
     * The table <code>cricketarchive.ExtraMatchDetails</code>.
     */
    val EXTRAMATCHDETAILS: Extramatchdetails get() = Extramatchdetails.EXTRAMATCHDETAILS

    /**
     * The table <code>cricketarchive.FallOfWickets</code>.
     */
    val FALLOFWICKETS: Fallofwickets get() = Fallofwickets.FALLOFWICKETS

    /**
     * The table <code>cricketarchive.Fielding</code>.
     */
    val FIELDING: Fielding get() = Fielding.FIELDING

    /**
     * The table <code>cricketarchive.Grounds</code>.
     */
    val GROUNDS: Grounds get() = Grounds.GROUNDS

    /**
     * The table <code>cricketarchive.GroundsMatchTypes</code>.
     */
    val GROUNDSMATCHTYPES: Groundsmatchtypes get() = Groundsmatchtypes.GROUNDSMATCHTYPES

    /**
     * The table <code>cricketarchive.GroundsName</code>.
     */
    val GROUNDSNAME: Groundsname get() = Groundsname.GROUNDSNAME

    /**
     * The table <code>cricketarchive.Innings</code>.
     */
    val INNINGS: Innings get() = Innings.INNINGS

    /**
     * The table <code>cricketarchive.Matches</code>.
     */
    val MATCHES: Matches get() = Matches.MATCHES

    /**
     * The table <code>cricketarchive.MatchReferees</code>.
     */
    val MATCHREFEREES: Matchreferees get() = Matchreferees.MATCHREFEREES

    /**
     * The table <code>cricketarchive.MatchRefereesMatches</code>.
     */
    val MATCHREFEREESMATCHES: Matchrefereesmatches get() = Matchrefereesmatches.MATCHREFEREESMATCHES

    /**
     * The table <code>cricketarchive.MatchSubType</code>.
     */
    val MATCHSUBTYPE: Matchsubtype get() = Matchsubtype.MATCHSUBTYPE

    /**
     * The table <code>cricketarchive.Notes</code>.
     */
    val NOTES: Notes get() = Notes.NOTES

    /**
     * The table <code>cricketarchive.Partnerships</code>.
     */
    val PARTNERSHIPS: Partnerships get() = Partnerships.PARTNERSHIPS

    /**
     * The table <code>cricketarchive.PartnershipsPlayers</code>.
     */
    val PARTNERSHIPSPLAYERS: Partnershipsplayers get() = Partnershipsplayers.PARTNERSHIPSPLAYERS

    /**
     * The table <code>cricketarchive.Players</code>.
     */
    val PLAYERS: Players get() = Players.PLAYERS

    /**
     * The table <code>cricketarchive.PlayersMatches</code>.
     */
    val PLAYERSMATCHES: Playersmatches get() = Playersmatches.PLAYERSMATCHES

    /**
     * The table <code>cricketarchive.PlayersOfTheMatchMatches</code>.
     */
    val PLAYERSOFTHEMATCHMATCHES: Playersofthematchmatches get() = Playersofthematchmatches.PLAYERSOFTHEMATCHMATCHES

    /**
     * The table <code>cricketarchive.PlayersTeams</code>.
     */
    val PLAYERSTEAMS: Playersteams get() = Playersteams.PLAYERSTEAMS

    /**
     * The table <code>cricketarchive.ReserveUmpires</code>.
     */
    val RESERVEUMPIRES: Reserveumpires get() = Reserveumpires.RESERVEUMPIRES

    /**
     * The table <code>cricketarchive.ReserveUmpiresMatches</code>.
     */
    val RESERVEUMPIRESMATCHES: Reserveumpiresmatches get() = Reserveumpiresmatches.RESERVEUMPIRESMATCHES

    /**
     * The table <code>cricketarchive.Scorers</code>.
     */
    val SCORERS: Scorers get() = Scorers.SCORERS

    /**
     * The table <code>cricketarchive.ScorersMatches</code>.
     */
    val SCORERSMATCHES: Scorersmatches get() = Scorersmatches.SCORERSMATCHES

    /**
     * The table <code>cricketarchive.Teams</code>.
     */
    val TEAMS: Teams get() = Teams.TEAMS

    /**
     * The table <code>cricketarchive.TeamsMatchTypes</code>.
     */
    val TEAMSMATCHTYPES: Teamsmatchtypes get() = Teamsmatchtypes.TEAMSMATCHTYPES

    /**
     * The table <code>cricketarchive.TvUmpires</code>.
     */
    val TVUMPIRES: Tvumpires get() = Tvumpires.TVUMPIRES

    /**
     * The table <code>cricketarchive.TvUmpiresMatches</code>.
     */
    val TVUMPIRESMATCHES: Tvumpiresmatches get() = Tvumpiresmatches.TVUMPIRESMATCHES

    /**
     * The table <code>cricketarchive.Umpires</code>.
     */
    val UMPIRES: Umpires get() = Umpires.UMPIRES

    /**
     * The table <code>cricketarchive.UmpiresMatches</code>.
     */
    val UMPIRESMATCHES: Umpiresmatches get() = Umpiresmatches.UMPIRESMATCHES

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Battingdetails.BATTINGDETAILS,
        Bowlingdetails.BOWLINGDETAILS,
        Closeofplay.CLOSEOFPLAY,
        Countries.COUNTRIES,
        Countrycodes.COUNTRYCODES,
        Extramatchdetails.EXTRAMATCHDETAILS,
        Fallofwickets.FALLOFWICKETS,
        Fielding.FIELDING,
        Grounds.GROUNDS,
        Groundsmatchtypes.GROUNDSMATCHTYPES,
        Groundsname.GROUNDSNAME,
        Innings.INNINGS,
        Matches.MATCHES,
        Matchreferees.MATCHREFEREES,
        Matchrefereesmatches.MATCHREFEREESMATCHES,
        Matchsubtype.MATCHSUBTYPE,
        Notes.NOTES,
        Partnerships.PARTNERSHIPS,
        Partnershipsplayers.PARTNERSHIPSPLAYERS,
        Players.PLAYERS,
        Playersmatches.PLAYERSMATCHES,
        Playersofthematchmatches.PLAYERSOFTHEMATCHMATCHES,
        Playersteams.PLAYERSTEAMS,
        Reserveumpires.RESERVEUMPIRES,
        Reserveumpiresmatches.RESERVEUMPIRESMATCHES,
        Scorers.SCORERS,
        Scorersmatches.SCORERSMATCHES,
        Teams.TEAMS,
        Teamsmatchtypes.TEAMSMATCHTYPES,
        Tvumpires.TVUMPIRES,
        Tvumpiresmatches.TVUMPIRESMATCHES,
        Umpires.UMPIRES,
        Umpiresmatches.UMPIRESMATCHES
    )
}
