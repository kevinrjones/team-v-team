/*
 * This file is generated by jOOQ.
 */
package com.knowledgespike.db.tables.records


import com.knowledgespike.db.tables.Playersteams

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayersteamsRecord() : TableRecordImpl<PlayersteamsRecord>(Playersteams.PLAYERSTEAMS) {

    open var playerid: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var teamid: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var matchtype: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var debutid: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var debut: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var activeuntil: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    /**
     * Create a detached, initialised PlayersteamsRecord
     */
    constructor(playerid: Int? = null, teamid: Int? = null, matchtype: String? = null, debutid: Int? = null, debut: Long? = null, activeuntil: Long? = null): this() {
        this.playerid = playerid
        this.teamid = teamid
        this.matchtype = matchtype
        this.debutid = debutid
        this.debut = debut
        this.activeuntil = activeuntil
        resetChangedOnNotNull()
    }
}
