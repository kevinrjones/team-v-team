/*
 * This file is generated by jOOQ.
 */
package com.knowledgespike.db.tables.records


import com.knowledgespike.db.tables.Playerrelations

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayerrelationsRecord() : UpdatableRecordImpl<PlayerrelationsRecord>(Playerrelations.PLAYERRELATIONS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var playerid: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var caplayerid: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var name: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var relationid: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var type: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PlayerrelationsRecord
     */
    constructor(id: Int? = null, playerid: Int? = null, caplayerid: Int? = null, name: String? = null, relationid: Int? = null, type: String? = null): this() {
        this.id = id
        this.playerid = playerid
        this.caplayerid = caplayerid
        this.name = name
        this.relationid = relationid
        this.type = type
        resetChangedOnNotNull()
    }
}
