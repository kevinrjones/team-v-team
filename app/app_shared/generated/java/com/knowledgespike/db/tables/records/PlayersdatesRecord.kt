/*
 * This file is generated by jOOQ.
 */
package com.knowledgespike.db.tables.records


import com.knowledgespike.db.tables.Playersdates

import java.time.LocalDate

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayersdatesRecord() : UpdatableRecordImpl<PlayersdatesRecord>(Playersdates.PLAYERSDATES) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var playerid: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var matchtype: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var debut: LocalDate?
        set(value): Unit = set(3, value)
        get(): LocalDate? = get(3) as LocalDate?

    open var activeuntil: LocalDate?
        set(value): Unit = set(4, value)
        get(): LocalDate? = get(4) as LocalDate?

    open var debutasoffset: Long?
        set(value): Unit = set(5, value)
        get(): Long? = get(5) as Long?

    open var activeuntilasoffset: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PlayersdatesRecord
     */
    constructor(id: Int? = null, playerid: Int? = null, matchtype: String? = null, debut: LocalDate? = null, activeuntil: LocalDate? = null, debutasoffset: Long? = null, activeuntilasoffset: Long? = null): this() {
        this.id = id
        this.playerid = playerid
        this.matchtype = matchtype
        this.debut = debut
        this.activeuntil = activeuntil
        this.debutasoffset = debutasoffset
        this.activeuntilasoffset = activeuntilasoffset
        resetChangedOnNotNull()
    }
}
